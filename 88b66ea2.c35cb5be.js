(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{68:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return d}));var n=r(1),a=r(6),i=(r(0),r(85)),o={id:"git",title:"Git"},c={unversionedId:"protips/git",id:"protips/git",isDocsHomePage:!1,title:"Git",description:"main",source:"@site/pages/protips/git.md",slug:"/protips/git",permalink:"/pages/protips/git",version:"current",sidebar:"someSidebar",previous:{title:"ProTips",permalink:"/pages/protips/index"},next:{title:"Presenting & Sharing",permalink:"/pages/protips/presenting"}},s=[{value:"<code>main</code>",id:"main",children:[]},{value:"<code>rmbranch</code>",id:"rmbranch",children:[]},{value:"<code>rebase</code>",id:"rebase",children:[{value:"Bad rebase? Use <code>git reflog</code>",id:"bad-rebase-use-git-reflog",children:[]}]},{value:"Current branch name",id:"current-branch-name",children:[]}],b={rightToc:s};function d(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},b,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"main"},Object(i.b)("inlineCode",{parentName:"h2"},"main")),Object(i.b)("p",null,"Finds the default tracked (main) branch. Used to typically be ",Object(i.b)("inlineCode",{parentName:"p"},"master"),", but we are thankfully moving to ",Object(i.b)("inlineCode",{parentName:"p"},"main"),". This script can help remove the guessing game if you work with a bunch of repos."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash",metastring:'title="Add to your ~/.zshrc"',title:'"Add',to:!0,your:!0,'~/.zshrc"':!0}),"function main() {\n    DEFAULT_BRANCH=`git remote show origin | grep \"HEAD branch\" | sed 's/.*: //'`\n    git checkout $DEFAULT_BRANCH\n    git pull\n}\n")),Object(i.b)("h2",{id:"rmbranch"},Object(i.b)("inlineCode",{parentName:"h2"},"rmbranch")),Object(i.b)("p",null,"Deletes your current branch and moves to the default tracked branch."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash",metastring:'title="Add to your ~/.zshrc"',title:'"Add',to:!0,your:!0,'~/.zshrc"':!0}),"function rmbranch() {\n    BRANCH=`git rev-parse --abbrev-ref HEAD`\n    DEFAULT_BRANCH=`git remote show origin | grep \"HEAD branch\" | sed 's/.*: //'`\n    git checkout $DEFAULT_BRANCH\n    git branch -D $BRANCH\n    git pull\n}\n")),Object(i.b)("h2",{id:"rebase"},Object(i.b)("inlineCode",{parentName:"h2"},"rebase")),Object(i.b)("p",null,"Super helpful for workplaces that prefer flat commits and don't allow merge commits \u2013\xa0or you just find it easier to rebase. Quickly fetches your default branch and rebases on top of the latest changes."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash",metastring:'title="Add to your ~/.zshrc"',title:'"Add',to:!0,your:!0,'~/.zshrc"':!0}),"function rebase() {\n    DEFAULT_BRANCH=`git remote show origin | grep \"HEAD branch\" | sed 's/.*: //'`\n    git fetch origin $DEFAULT_BRANCH\n    git rebase origin/$DEFAULT_BRANCH\n}\n")),Object(i.b)("h3",{id:"bad-rebase-use-git-reflog"},"Bad rebase? Use ",Object(i.b)("inlineCode",{parentName:"h3"},"git reflog")),Object(i.b)("p",null,"Screw up a rebase somewhere and need to back out to where you were before you started? Check your ",Object(i.b)("inlineCode",{parentName:"p"},"git reflog")," for the actions taken, most recent at the top, and find the action before you started rebasing. Copy the hash and run ",Object(i.b)("inlineCode",{parentName:"p"},"git reset --hard <hash>")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"git reflog\nd734bb0 HEAD@{0}: rebase finished: returning to refs/heads/parmstrong/middleware-1-sanitizeauth\nd734bb0 HEAD@{1}: rebase: refactor: convert SanitizeAuthFilter to middleware\n126725c HEAD@{2}: rebase: checkout master\n5dc7d03 HEAD@{3}: checkout: moving from master to parmstrong/middleware-1-sanitizeauth\n...\n\ngit reset --hard 5dc7d03\n")),Object(i.b)("h2",{id:"current-branch-name"},"Current branch name"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"git rev-parse --abbrev-ref HEAD\n")))}d.isMDXComponent=!0}}]);